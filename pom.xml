<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>cn.stevei5mc.serverhelper</groupId>
    <artifactId>ServerHelper</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <!-- 这里定义子块，增加新的子模块就在这里加上 -->
    <modules>
        <module>Nukkit</module>
        <module>WaterdogPE</module>
    </modules>

    <distributionManagement>
        <repository>
            <id>a1145142-plugins-test</id>
            <name>test</name>
            <url>https://a1145142-maven.pkg.coding.net/repository/plugins/test/</url>
        </repository>
    </distributionManagement>

    <properties>
        <java.version>1.8</java.version>
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
    </properties>

    <repositories>
        <!-- Maven仓库配置
        这里存放了公用的Maven仓库配置，专属的Maven仓库请在对应的pom.xml文件配置 -->
        <repository>
            <id>opencollab-repo-release</id>
            <url>https://repo.opencollab.dev/maven-releases/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>opencollab-repo-snapshot</id>
            <url>https://repo.opencollab.dev/maven-snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>repo-lanink-cn</id>
            <url>https://repo.lanink.cn/repository/maven-public/</url>
        </repository>
        <repository>
            <id>a1145142-plugins-test</id>
            <name>test</name>
            <url>https://a1145142-maven.pkg.coding.net/repository/plugins/test/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <dependencyManagement>
        <!--  这里存放着只有部分模块会用到的相同依赖  -->
        <!-- 必需要再子模块中引用才能正常的使用，只需引用 groupId和artifactId，不用引用version-->
        <dependencies>
            <dependency>
                <groupId>net.luckperms</groupId>
                <artifactId>api</artifactId>
                <version>5.4</version>
                <scope>provided</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!--项目依赖配置
        这里存放了公用的项目依赖配置，专属的依赖请在对应的pom.xml文件配置 -->
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>com.google.code.maven-replacer-plugin</groupId>
                <artifactId>replacer</artifactId>
                <version>1.5.3</version>
                <executions>
                    <execution>
                        <id>add-version</id>
                        <phase>process-sources</phase>
                        <goals><goal>replace</goal></goals>
                        <configuration>
                            <includes>
                                <include>${project.basedir}/src/main/resources/plugin.yml</include>
                            </includes>
                            <replacements>
                                <replacement>
                                    <token>version: ".*"</token>
                                    <value>version: "${project.version}"</value>
                                </replacement>
                            </replacements>
                            <encoding>${maven.compiler.encoding}</encoding>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.2</version>
                <configuration>
                    <source>${default.java.version}</source>
                    <target>${default.java.version}</target>
                    <encoding>${maven.compiler.encoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.3.2</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <show>private</show>
                    <nohelp>true</nohelp>
                    <charset>${maven.compiler.encoding}</charset>
                    <encoding>${maven.compiler.encoding}</encoding>
                    <docencoding>${maven.compiler.encoding}</docencoding>
                    <additionalJOption>-Xdoclint:none</additionalJOption>
                </configuration>
            </plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>2.2.6</version>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                    <prefix>git</prefix>
                    <dateFormat>dd.MM.yyyy '@' HH:mm:ss z</dateFormat>
                    <dateFormatTimeZone>${user.timezone}</dateFormatTimeZone>
                    <verbose>true</verbose>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties
                    </generateGitPropertiesFilename>
                    <format>properties</format>
                    <skipPoms>true</skipPoms>
                    <injectAllReactorProjects>false</injectAllReactorProjects>
                    <failOnNoGitDirectory>false</failOnNoGitDirectory>
                    <failOnUnableToExtractRepoInfo>false</failOnUnableToExtractRepoInfo>
                    <skip>false</skip>
                    <runOnlyOnce>false</runOnlyOnce>
                    <excludeProperties>
                        <excludeProperty>git.user.*</excludeProperty>
                    </excludeProperties>
                    <includeOnlyProperties>
                    </includeOnlyProperties>
                    <useNativeGit>false</useNativeGit>
                    <abbrevLength>7</abbrevLength>
                    <commitIdGenerationMode>flat</commitIdGenerationMode>
                    <gitDescribe>
                        <skip>false</skip>
                        <always>true</always>
                        <abbrev>7</abbrev>
                        <dirty>-dirty</dirty>
                        <match>*</match>
                        <tags>false</tags>
                        <forceLongFormat>false</forceLongFormat>
                    </gitDescribe>
                    <evaluateOnCommit>HEAD</evaluateOnCommit>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>