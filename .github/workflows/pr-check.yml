name: PR check

on:
  pull_request:

env:
  GH_TOKEN: ${{ github.token }}
  scriptPath: ".github/workflows/scripts"

jobs:
  Initialize:
    runs-on: ubuntu-latest
    outputs:
      repo_name: ${{ steps.get_info.outputs.repo_name }}
      targetSha: ${{ env.targetSha }}
      targetRef: ${{ env.targetRef }}
    steps:
    - name: 拉取代码
      uses: actions/checkout@v4
    - name: 获取信息
      id: get_info
      uses: ./.github/actions/getProjectInfo
      with:
        targetSha: ${{ github.event.pull_request.head.sha }}
    - name:  Print info
      run: |
        echo Release version: ${{ steps.get_info.outputs.version }}
        echo Target sha: ${{ steps.get_info.outputs.targetSha }}
        echo Tatget ref: ${{ steps.get_info.outputs.targetRef }}

  build-plugin:
    strategy:
      fail-fast: false
      matrix:
        include: [
          {path: "Nukkit",java-version: '8'},
          {path: "WaterdogPE",java-version: '17'}
        ]
    runs-on: ubuntu-latest
    needs: Initialize
    name: Build plugin
    steps:
    - name: 拉取代码
      uses: actions/checkout@v4
    - name: Setup java ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
    - name: Get pom info
      id: getPomInfo
      uses: ./.github/actions/getMvnPomInfo
      with:
        pomPath: ./${{ matrix.path }}/pom.xml
    - name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ steps.getPomInfo.outputs.artifactId }}_edition-${{ steps.getPomInfo.outputs.pomHash }}
        restore-keys: ${{ runner.os }}-maven--${{ matrix.name }}_edition-
    - name: Replace info
      env:
        basePath: ./${{ matrix.path }}/src/main
      run: |
        srcPath=${{ env.basePath }}/java/$(dirname $(grep "main:" ${{ env.basePath }}/resources/plugin.yml | awk '{print $2}' | sed 's/\./\//g' | sed 's/"//g'))
        echo "Src path: $srcPath"
        mainClassPath=$srcPath/ServerHelperMain.java
        echo "Main class path: $mainClassPath"
        sed -i 's/{git.commit.id.abbrev}/${{ needs.Initialize.outputs.targetSha }}/g' $mainClassPath
        sed -i 's/{git.branch}/${{ needs.Initialize.outputs.targetRef }}/g' $mainClassPath
        #sed -i 's/{plugin.version}/${{ steps.getPomInfo.outputs.version }}/g' $mainClassPath
    - name: Build project
      run: bash ${{ env.scriptPath }}/buildMavenProject.sh "${{ steps.getProjectInfo.outputs.artifactId }}" "${{ matrix.path }}"
    - name: Get artifact hash
      run: bash ${{ env.scriptPath }}/getArtifactHash.sh "${{ steps.getProjectInfo.outputs.artifactId }}" "jar" "${{ matrix.path }}/staging"
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.getProjectInfo.outputs.artifactId }}-PR_${{ github.event.pull_request.number }}_check-Build_${{ github.run_number }}
        path: ${{ matrix.path }}/staging

#  build-Docusaurus:
#    name: Build docusaurus
#    needs: Initialize
#    runs-on: ubuntu-latest
#    steps:
#    - name: 拉取代码
#      uses: actions/checkout@v4
#    - uses: actions/setup-node@v4
#      with:
#        node-version: 18
#    - name: 构建
#      run: |
#        cd Docusaurus
#        yarn install --frozen-lockfile
#        yarn build
#        cd ../
#    - name: 上传构建
#      uses: actions/upload-pages-artifact@v3
#      with:
#        path: Docusaurus/build