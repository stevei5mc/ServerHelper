name: PR check

on:
  pull_request:

jobs:
  initialize:
    runs-on: ubuntu-latest
    outputs:
      repo_name: ${{ steps.get_info.outputs.repo_name }}
      artifact_name: ${{ steps.get_info.outputs.repo_name }}-PR_${{ github.event.pull_request.number }}_check-Build_${{ github.run_number }}
      targetSha: ${{ steps.get_info.outputs.targetSha }}
      targetRef: ${{ steps.get_info.outputs.targetRef }}
    steps:
    - name: 获取信息
      id: get_info
      run: |
        echo "repo_name=${GITHUB_REPOSITORY/${{ github.repository_owner }}\//}" >> $GITHUB_OUTPUT
        echo "targetSha=$(echo ${{ github.event.pull_request.head.sha }} | cut -c 1-7)" >> $GITHUB_OUTPUT
        echo "targetRef=$(echo ${{ github.event.pull_request.head.ref }} | sed 's/refs\///g' | sed 's/\//\\\//g')" >> $GITHUB_OUTPUT
    - name:  Print info
      run: |
        echo Release version: ${{ steps.get_info.outputs.version }}
        echo Artifact name: ${{ steps.get_info.outputs.repo_name }}-Release-${{ steps.get_info.outputs.version }}
        echo Target sha: ${{ steps.get_info.outputs.targetSha }}
        echo Tatget ref: ${{ steps.get_info.outputs.targetRef }}

  build-plugin:
    strategy:
      matrix:
        include: [
          {name: "Nukkit",path: "Nukkit",java-version: '8'},
          {name: "WaterdogPE",path: "WaterdogPE",java-version: '17'}
        ]
    runs-on: ubuntu-latest
    needs: initialize
    name: Build ${{ matrix.name }} Edition
    steps:
    - name: 拉取代码
      uses: actions/checkout@v4.1.6
    - name: Setup java ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
    - name: Extractor pom.xml gav info 
      uses: andreacomo/maven-gav-extractor@v2.0.1
      id: getPomInfo
      with:
        pom-location: ./${{ matrix.path }}/pom.xml 
    - name: Show get pom.xml gav info
      run: |
        echo ${{ steps.getPomInfo.outputs.group-id }}
        echo ${{ steps.getPomInfo.outputs.artifact-id }}
        echo ${{ steps.getPomInfo.outputs.version }}
    - name: Get project info
      id: getProjectInfo
      run: |
        echo "pom_hash=$(sha256sum ./${{ matrix.path }}/pom.xml|awk '{print $1}')" >> $GITHUB_OUTPUT
        echo "path=$(grep "main:" ./${{ matrix.path }}/src/main/resources/plugin.yml | awk '{print $2}' | sed 's/\./\//g' | sed 's/"//g')" >> $GITHUB_OUTPUT
    - name: Replace info
      env:
        path: ./${{ matrix.path }}/src/main/java/${{ steps.getProjectInfo.outputs.pom_hash }}
      run: |
        sed -i 's/${git.commit.id.abbrev}/${{ needs.initialize.outputs.targetSha }}/g' ${{ env.path }}/ServerHelperMain.java
        sed -i 's/${git.branch}/${{ needs.initialize.outputs.targetRef }}/g' ${{ env.path }}/ServerHelperMain.java
    - name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ matrix.name }}_edition-${{ steps.getProjectInfo.outputs.pom_hash }}
        restore-keys: ${{ runner.os }}-maven--${{ matrix.name }}_edition-
    - name: Build project and get artifact hash
      run: bash .github/workflows/buildMavenProjectAndGetHash.sh "${{ steps.getPomInfo.outputs.artifact-id }}" "${{ matrix.path }}"
    - name: Upload build artifact
      uses: actions/upload-artifact@v4.3.3
      with:
        name: ${{ needs.initialize.outputs.artifact_name }}-for_${{ matrix.name }}_Edition
        path: ${{ matrix.path }}/staging

#  build-Docusaurus:
#    name: Build docusaurus
#    needs: initialize
#    runs-on: ubuntu-latest
#    steps:
#    - name: 拉取代码
#      uses: actions/checkout@v4
#      with:
#        submodules: true
#    - uses: actions/setup-node@v4
#      with:
#        node-version: 18
#    - name: 构建
#      run: |
#        cd Docusaurus
#        yarn install --frozen-lockfile
#        yarn build
#        cd ../
#    - name: 上传构建
#      uses: actions/upload-pages-artifact@v3
#      with:
#        path: Docusaurus/build