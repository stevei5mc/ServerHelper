name: dispatch
on:
  workflow_dispatch:
    inputs:
      build-plugin:
        description: 'Build plugin'
        required: false
        default: true
        type: boolean
      build-Docusaurus:
        description: 'Build docusaurus'
        required: false
        default: false
        type: boolean
      deploy-gitHub-pages:
        description: 'Deploy gitHub pages'
        required: false
        default: false
        type: boolean
      PR_Approve:
        description: 'PR Approve'
        required: false
        default: false
        type: boolean
      PR_ID:
        description: 'PR Approve ID'
        required: false

jobs:
  initialize:
    runs-on: ubuntu-latest
    outputs:
      repo_name: ${{ steps.get_info.outputs.repo_name }}
      artifact_name: ${{ steps.get_info.outputs.repository_name }}-Dispatch-Build_${{ github.run_number }}
      Deploy_gitHub_pages: ${{ steps.get_info.outputs.Deploy_gitHub_pages }}
      PR_Approve: ${{ steps.get_info.outputs.PR_Approve }}
      PR_ID: ${{ steps.get_info.outputs.PR_ID }}
      url: ${{ steps.get_info.outputs.url }}
    steps:
    - name: 输入参数
      run: |
        echo Build plugin : ${{ inputs.build-plugin }}
        echo Build docusaurus : ${{ inputs.build-Docusaurus }}
        echo Deploy gitHub pages : ${{ inputs.deploy-gitHub-pages }}
        echo PR Approve : ${{ inputs.PR_Approve }}
        echo PR Approve ID : ${{ inputs.PR_ID }}
    - name: 获取信息
      id: get_info
      run: |
        echo "repo_name=${GITHUB_REPOSITORY/${{ github.repository_owner }}\//}" >> $GITHUB_OUTPUT
        echo "Deploy_gitHub_pages=${{ inputs.deploy-gitHub-pages }}" >> $GITHUB_OUTPUT
        echo "PR_Approve=${{ inputs.PR_Approve }}" >> $GITHUB_OUTPUT
        echo "PR_ID=${{ inputs.PR_ID }}" >> $GITHUB_OUTPUT

  build:
    if: ${{ inputs.build-plugin }}
    strategy:
      matrix:
        include:
          - name: "Nukkit"
            path: "Nukkit"
            java: '8'
          - name: "WaterdogPE"
            path: "WaterdogPE"
            java: '17'
    runs-on: ubuntu-latest
    needs: initialize
    name: Build ${{ matrix.name }} Edition
    steps:
    - name: 拉取代码
      uses: actions/checkout@v4.1.6
    - name: 拉取代码(批准PR专用)
      if: needs.initialize.outputs.PR_Approve == 'true' && needs.initialize.outputs.Deploy_gitHub_pages == 'false'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        ls -la
        gh pr checkout ${{ inputs.PR_ID }}
        ls -la
    - name: Setup java ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'
    - name: Cache maven
      uses: actions/cache@v4.0.2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ matrix.name }}_edition-${{ hashFiles('**/${{ matrix.path }}/pom.xml') }}
        restore-key: ${{ runner.os }}-maven-${{ matrix.name }}_edition-
    - name: 构建
      run: |
        cd ${{ matrix.path }}
        mvn -B package --file pom.xml
        mkdir staging
        cp target/*.jar staging
        cd ../
    - name: 收集构建文件
      uses: actions/upload-artifact@v4.3.3
      with:
        name: ${{ needs.initialize.outputs.artifact_name }}-for_${{ matrix.name }}_Edition
        path: ${{ matrix.path }}/staging

  build-Docusaurus:
    if: ${{ inputs.build-Docusaurus }}
    name: Build docusaurus
    needs: initialize
    runs-on: ubuntu-latest
    steps:
      - name: 拉取代码
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: 拉取代码(批准PR专用)
        if: needs.initialize.outputs.PR_Approve == 'true' && needs.initialize.outputs.Deploy_gitHub_pages == 'false'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ls -la
          gh pr checkout ${{ inputs.PR_ID }}
          ls -la
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: 构建
        run: |
          cd Docusaurus
          npm ci
          npm run build
          cd ../
      - name: 上传构建
        uses: actions/upload-pages-artifact@v3
        with:
          path: Docusaurus/build
