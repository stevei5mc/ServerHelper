name: dispatch

on:
  workflow_dispatch:
    inputs:
      build-plugin:
        description: 'Build plugin'
        required: false
        default: true
        type: boolean
      build-Docusaurus:
        description: 'Build docusaurus'
        required: false
        default: false
        type: boolean
      additional-functions:
        description: "Additional functions"
        required: false
        default: 'warning'
        type: choice
        options:
        - Not used
        - PR Approve
        - Deploy gitHub pages
      PR_ID:
        description: 'PR Approve ID'
        required: false

jobs:
  initialize:
    runs-on: ubuntu-latest
    outputs:
      repo_name: ${{ steps.get_info.outputs.repo_name }}
      artifact_name: ${{ steps.get_info.outputs.repo_name }}-Dispatch-Build_${{ github.run_number }}
      additional-functions: ${{ steps.get_info.outputs.additional-functions }}
      PR_ID: ${{ steps.get_info.outputs.PR_ID }}
      url: ${{ steps.get_info.outputs.url }}
    steps:
    - name: 获取信息
      id: get_info
      run: |
        echo "repo_name=${GITHUB_REPOSITORY/${{ github.repository_owner }}\//}" >> $GITHUB_OUTPUT
        echo "additional-functions=${{ inputs.additional-functions }}" >> $GITHUB_OUTPUT
        echo "PR_ID=${{ inputs.PR_ID }}" >> $GITHUB_OUTPUT
        echo "url=github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_OUTPUT
    - name:  Output info list
      run: |
        echo Bases info:
        echo Build plugin : ${{ inputs.build-plugin }}
        echo Build docusaurus : ${{ inputs.build-Docusaurus }}
        echo Artifact name: ${{ steps.get_info.outputs.repo_name }}-Dispatch-Build_${{ github.run_number }}
        echo Additional functions info:
        echo Functions: ${{ steps.get_info.additional-functions }}
        echo PR Approve ID : ${{ inputs.PR_ID }}
    - name: Summary Action
      if: steps.get_info.outputs.additional-functions != 'Not used'
      uses: johngeorgewright/summary-action@v1.0.0
      with:
        summary: |
          # Build
          |Plugins|Docusaurus|
          |:-:|:-:|
          |${{ inputs.build-plugin }}|${{ inputs.build-Docusaurus }}|
          ---
          # Additional functions
          |Functions|PR ID|
          |:-:|:-:|
          |${{ inputs.additional-functions }}|${{ inputs.PR_ID }}|


  build-plugin:
    if: ${{ inputs.build-plugin }}
    strategy:
      matrix:
        include:
          - name: "Nukkit"
            path: "Nukkit"
            java: '8'
          - name: "WaterdogPE"
            path: "WaterdogPE"
            java: '17'
    runs-on: ubuntu-latest
    needs: initialize
    name: Build ${{ matrix.name }} Edition
    steps:
    - name: 拉取代码
      uses: actions/checkout@v4.1.6
    - name: 拉取代码(批准PR专用)
      if: needs.initialize.outputs.additional-functions == 'PR Approve'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        ls -la
        gh pr checkout ${{ inputs.PR_ID }}
        ls -la
    - name: Setup java ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'
    - name: Extractor pom.xml gav info 
      uses: andreacomo/maven-gav-extractor@v2.0.1
      id: getPomInfo
      with:
        pom-location: ./${{ matrix.path }}/pom.xml 
    - name: Show get pom.xml gav info
      run: |
        echo Group id: ${{ steps.getPomInfo.outputs.group-id }}
        echo Artifact id: ${{ steps.getPomInfo.outputs.artifact-id }}
        echo Version: ${{ steps.getPomInfo.outputs.version }}
    - name: Get pom.xml hash
      id: pom_hash
      run: echo "pom_hash=$(sha256sum ./${{ matrix.path }}/pom.xml|awk '{print $1}')" >> $GITHUB_OUTPUT
    - name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ matrix.name }}_edition-${{ steps.pom_hash.outputs.pom_hash }}
        restore-keys: |
          ${{ runner.os }}-maven--${{ matrix.name }}_edition-
    - name: Build project and get artifact hash
      run: |
        cd ./${{ matrix.path }}
        pwd
        mvn -B package --file pom.xml
        mkdir staging
        cp target/*.jar staging
        ls -la
        cd ./staging
        bash ../../.github/workflows/get_build_files_hash.sh "${{ steps.getPomInfo.outputs.artifact-id }}"
        cd ../../
    - name: Upload build artifact
      uses: actions/upload-artifact@v4.3.3
      with:
        name: ${{ needs.initialize.outputs.artifact_name }}-for_${{ matrix.name }}_Edition
        path: ${{ matrix.path }}/staging

  build-Docusaurus:
    if: ${{ inputs.build-Docusaurus }}
    name: Build docusaurus
    needs: initialize
    runs-on: ubuntu-latest
    steps:
      - name: 拉取代码
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: 拉取代码(批准PR专用)
        if: needs.initialize.outputs.additional-functions == 'PR Approve'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ls -la
          gh pr checkout ${{ inputs.PR_ID }}
          ls -la
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: 构建
        run: |
          cd Docusaurus
          yarn install --frozen-lockfile
          yarn build
          cd ../
      - name: 上传构建
        uses: actions/upload-pages-artifact@v3
        with:
          path: Docusaurus/build

  PR-Approve:
    if: needs.initialize.outputs.additional-functions == 'PR Approve'
    name: PR Approve
    needs: 
    - build-Docusaurus
    - build-plugin
    runs-on: ubuntu-latest
    steps:
    - name: 拉取代码
      uses: actions/checkout@v4
      with:
        submodules: true
    - name: 批准PR
      if: needs.build-Docusaurus.result == 'success' && needs.build-plugin.result == 'success'
      uses: hmarr/auto-approve-action@v4.0.0
      with:
        pull-request-number: ${{ inputs.PR_ID }}
        review-message: |
          构建成功，本PR获得批准合并。如果有新的提交则自动取消本次批准！
          非常感谢您对本次作出的贡献。

          The build was successful, and this PR was approved for merging.
          If there is a new submission, this approval will be automatically canceled.
          Thank you very much for your contribution to this event。

          ${{ needs.initialize.outputs.url }}
    - name: PR review message
      if: failure() || needs.build-Docusaurus.result != 'success' || needs.build-plugin.result != 'success'
      uses: miry/prcomment@v0.1.3
      with:
        msg: |
          构建失败，请查看构建获取失败原因：
          Build failed, please check the build to obtain the reason for the failure:

          ${{ steps.get_info.outputs.url }}
        pr: ${{ inputs.PR_ID }}
        token: ${{ secrets.GITHUB_TOKEN }}

  deploy-gitHub-pages:
    if: needs.initialize.outputs.additional-functions == 'Deploy gitHub pages'
    name: Deploy gitHub pages
    needs: 
    - build-Docusaurus
    - build-plugin
    # 给予 GITHUB_TOKEN 进行 Pages 部署所必须的权限
    permissions:
      pages: write # 以部署到 Pages
      id-token: write # 以验证部署来自恰当的源
    # 部署到 Github Pages 环境
    # environment:
    #   name: github-pages
    #   url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
       - name: 部署到 GitHub Pages
         id: deployment
         uses: actions/deploy-pages@v4